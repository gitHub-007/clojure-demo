(ns noah.ptnetwork)
(println "hello clojure" 1 2)
(println (/ (+ 1 2) 5))
(println (count [1 2 3 4]))
(println [1 2 3])
(do (println "hi")
    (println (apply * [1 2 3])))
(println (let [[x y & z] [1 2]]
           (println (/ x y 3))))
(defn countdown [x]
  (if (pos? x)
    (do (println x)
        (recur (dec x)))
    ))
(countdown 10)
;(println Integer/MAX_VALUE)
(defn call_twice [f x]
  (f x) (f x))
;(call_twice println 123)
;(println (map clojure.string/lower-case ["A" "D" "c"]))
;(println (reduce max [1 2 3 4]))
;(recur  (dec [1 2 3 4]))
;(println (coll? (list 1 2 3)))
;(println (seq? [1 2 3]))